name: "Build"

on:
  push:
    tags:
      - "v*"
    branches:
      - "**"

  pull_request:
    branches:
      - main
    tags:
      - "v*"

env:
  RUST_BACKTRACE: 1
  CARGO_INCREMENTAL: 0
  CARGO_PROFILE_DEV_DEBUG: 0

jobs:
  typecheck:
    name: "Typecheck"
    runs-on: ubuntu-latest
    steps:
      - name: "Checkout"
        uses: actions/checkout@v2

      - name: "Setup Node"
        uses: actions/setup-node@v2

      - name: "Install dependencies"
        run: |
          npm install

      - name: "Typecheck"
        run: |
          npm run typecheck

  build:
    name: "Build"
    runs-on: ${{ matrix.platform }}

    strategy:
      fail-fast: true
      matrix:
        platform: ['ubuntu-latest', 'windows-latest', 'macos-latest']

    steps:
      - name: "Checkout"
        uses: actions/checkout@v2

      - name: "Setup Node"
        uses: actions/setup-node@v2

      - name: "Setup Rust"
        uses: actions-rs/toolchain@v1
        with:
          toolchain: "stable"

      - name: "Install dependencies"
        run: |
          npm install

      - name: "Build"
        run: |
          npm run migrate
          npm run build

  publish:
    name: "Publish"
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    needs:
      - build
      - typecheck

    steps:
      - name: "Checkout"
        uses: actions/checkout@v2

      - name: "Publish"
        uses: actions/release-action@v1
        with:
          artifacts: "target/release/bundle/appimage/*.AppImage,target/release/bundle/deb/*.deb"
          prerelease: false

  publish-prerelease:
    name: "Publish Prerelease"
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/pr')
    needs:
      - build
      - typecheck

    steps:
      - name: "Checkout"
        uses: actions/checkout@v2

      - name: "Publish"
        uses: ncipollo/release-action@v1
        with:
          artifacts: "target/release/bundle/appimage/*.AppImage,target/release/bundle/deb/*.deb"
          prerelease: true